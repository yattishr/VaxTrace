type ParentTable @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  titleField: String
  noOfInfants: Int
  emailAddress: String
  contactNumber: String
  idNumber: String
  dateOfBirtth: String
  physicalAdress: String
  infantArray: [String]
  medicalRepId: String
  totalPoints: Int
  totalPointsAccrued: Int
}

type VaccineHistory @model @key(name: "byVaccine", fields: ["vaccineID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  vaccineName: String
  dateAdministered: String
  medicalRepName: String
  vaccineFlag: Boolean
  vaccineID: ID!
}

type Vaccine @model @key(name: "byInfant", fields: ["infantID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  vaccineName: String
  vaccineDosage: String
  vaccineFrequecy: String
  infantID: ID!
  VaccineHistories: [VaccineHistory] @connection(keyName: "byVaccine", fields: ["id"])
}

type Infant @model @key(name: "byParent", fields: ["parentID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  dateOfBirth: String
  gender: String
  parentID: ID!
  Vaccines: [Vaccine] @connection(keyName: "byInfant", fields: ["id"])
  pointsAccrued: Int
  pointsTotal: Int
  age: Int
  height: Int
  weight: Int
}

type MedicalRep @model @auth(rules: [{allow: public}]) {
  id: ID!
  firstName: String
  lastName: String
  practiseNumber: String
  practiseName: String
  idNumber: String
  dateOfBirth: String
  physicalAddress: String
  contactNumber: String
  emailAddress: String
  titleField: String
}
 